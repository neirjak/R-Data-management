#Viikko 3
#Funktiot, faktorit ja ristiintaulukointi

#3.1 Funktiot

#3.1.1 Omat funktiot
zeros <- function(N){
  z <- rep(0,N)
  return(z)
}
zeros(1)
zeros(5)
zeros(20)
random_integers <- function(N=1, a=0, b=1) {
 values <- runif(n=N, min=a, max=b) 
 int_values <- round(values)
 return(int_values)
}
random_integers(10,0,5)

#3.1.2 Nimetyt argumentit ja oletusarvot argumenteille
random_integers(10,15,20)
random_integers(10)

#3.2 Koodin osien toistaminen

#3.2.1 for-silmukka
for(i in 1:10){
  print(i)
}

#3.2.2 sapply()
sapply(1:10, function(x){x^2})
sapply(1:10, function(x) x^2)
sapply(1:5, log)
sapply(1:5, function(x) log(x, base=2))
A <- matrix(sample(20,100,replace=TRUE), nrow=10)
A
ncol(A)
?numeric
numeric(8)
values <- numeric(ncol(A)) 
values
for(i in 1:ncol(A)) {
  values[i] <- max(A[,i])
}
values
sapply(1:ncol(A), function(i) max(A[,i]))
arvot <- numeric(nrow(A))
for(i in 1:nrow(A)) {
  arvot[i] <- min(A[i,])
}
arvot
sapply(1:nrow(A), function(i) min(A[i,]))

#3.2.2 apply()
A
apply(A,2,max)
apply(A,2,mean)
B <- matrix(seq(5,9,length.out = 100), nrow=10)
B
?seq
B_1 <- B[,4:8]
B_1
apply(B_1,1,mean)
apply(B_1,2,sum)
resim
apply(resim[,2:3],2,mean)
colMeans(resim[,2:ncol(resim)], na.rm=TRUE)

#3.3 Faktorit

#3.3.1 Faktorien luominen
paa_aine <- c("Mat", "Tal", "Tal", "Til", "Til", "Mat", "Til")
paa_aine 
paa_aine <- factor(paa_aine)
str(paa_aine)
paa_aine
tiedekunta <- c(1,2,2,1,1,1,2)
tiedekunta <- factor(tiedekunta, labels=c("ML", "VT"))
tiedekunta

#3.3.2 Faktorien k채sittely채
lisaa_tiedekuntia <- c("Humanistinen tiedekunta", "L채채ketieteellinen tiedekunta", "Oikeustieteellinen tiedekunta", "Teologinen tiedekunta")
lisaa_tiedekuntia <- factor(c(1,2,2,1,3,3,2,4), labels=lisaa_tiedekuntia)
lisaa_tiedekuntia
str(lisaa_tiedekuntia)
levels(lisaa_tiedekuntia)
lisaa_tiedekuntia
levels(lisaa_tiedekuntia) <- c("HT", "LT", "OT", "TT")
lisaa_tiedekuntia
k <- c("A", "B", "c", "D")
k
o <- c(1,2,1,2,3,4,1,2,3,4,2,3,1,2,4)
o
o <- factor(o, labels=k)
o
levels(o)
levels(o) <- c("E", "F", "G", "H")
levels(o)
o
vain_ot <- lisaa_tiedekuntia[lisaa_tiedekuntia =="OT"]
vain_ot
vain_ot <- droplevels(vain_ot)
vain_ot
tdk <- factor(c(3,1,2,99,3), levels=1:4, labels=c("HT", "LT", "OT", "TT"))
tdk

#3.4 Osa-aineistojen valinta, osa 2

#3.4.1 Alkioiden valinta vektorista
a <- c(3,NA, 6,54,NA,5)
a
a > 6
a[a<6]
length(a[a<6])
which(a<6)
a[which(a<6)]
length(a[which(a<6)])
subset(a, a>6)
length(subset(a,a>6))

#3.4.2 Osa-aineistojen valinta taulukosta
tutkinto <- c(1,1,1,NA,2,NA,1)
tutkinto <- factor(tutkinto, labels=c("kandi", "maisteri"))
opiskelijaNro <- runif(length(paa_aine), min=1000000, max=1500000)
opiskelijat <- data.frame(opiskelijaNro, paa_aine, tiedekunta, tutkinto)
opiskelijat
opiskelijat[opiskelijat$tutkinto=='kandi', ]
subset(opiskelijat, tutkinto=='kandi')
nrow(subset(opiskelijat, tutkinto=='kandi'))
subset(opiskelijat, tutkinto=='kandi' & tiedekunta=='ML')

#3.4.3 Tunnuslukujen laskeminen osa-aineistoittain
opiskelijat$opintopisteet <- c(20,33,55,120,230,172,50)
opiskelijat
pisteet_tapply <- tapply(opiskelijat$opintopisteet, opiskelijat$paa_aine, mean)
pisteet_tapply
str(pisteet_tapply)
pisteet_aggregate <- aggregate(opintopisteet ~ paa_aine, FUN=mean, data=opiskelijat)
pisteet_aggregate

#3.5 Ristiintaulukointi

#3.5.1 Frekvenssitaulu
a <- c(10,22,438,7,22,22,10,438,22,22,22)
a
table(a)
table(opiskelijat$tutkinto)

#3.5.2 Ristiintaulukointi
table(opiskelijat$paa_aine, opiskelijat$tiedekunta)
paa_aine_X_tiedekunta <- table(opiskelijat$paa_aine, opiskelijat$tiedekunta)
paa_aine_X_tiedekunta
apply(paa_aine_X_tiedekunta, 2, sum)
prop.table(paa_aine_X_tiedekunta, 2)
